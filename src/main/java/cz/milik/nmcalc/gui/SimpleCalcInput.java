/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cz.milik.nmcalc.gui;

import cz.milik.nmcalc.values.ErrorValue;
import cz.milik.nmcalc.parser.Scanner;
import cz.milik.nmcalc.peg.ITokenSequence;
import cz.milik.nmcalc.peg.TokenList;
import cz.milik.nmcalc.utils.ListenerCollection;
import java.awt.event.KeyEvent;

/**
 *
 * @author jan
 */
public class SimpleCalcInput extends javax.swing.JPanel implements IInputView {

    private ErrorValue error;
    private ITokenSequence tokens;
    
    private Scanner scanner = new Scanner();
    
    @Override
    public ErrorValue getError() {
        return error;
    }
    
    @Override
    public void setError(ErrorValue error) {
        this.error = error;
        
        if (error == null) {
            statusLabel.setVisible(false);
            return;
        }
        
        statusLabel.setVisible(true);
        statusLabel.setText(error.getMessage());
    }
    
    /**
     *
     */
    @Override
    public void clearError() {
        setError(null);
    }
    
    
    @Override
    public String getInput() {
        return input.getText();
    }
    
    @Override
    public void clearInput() {
        input.setText("");
    }

    @Override
    public ITokenSequence getTokens() {
        return tokens;
    }
    
    
    private final ListenerCollection<IInputViewListener> listeners = new ListenerCollection(new IInputViewListener[] {});
    
    @Override
    public void addListener(IInputViewListener listener) {
        listeners.add(listener);
    }

    @Override
    public void removeListener(IInputViewListener listener) {
        listeners.remove(listener);
    }
    
    protected void fireOnInput(final String input) {
        listeners.handleEvent(listener -> {
            listener.onInput(this, input);
        });
    }
    
    protected void fireOnInputCommited(final String input) {
        listeners.handleEvent(listener -> {
            listener.onInputCommited(this, input);
        });
    }
    
    /**
     * Creates new form SimpleCalcInput
     */
    public SimpleCalcInput() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        statusLabel = new javax.swing.JLabel();
        inputScrollPane = new javax.swing.JScrollPane();
        input = new cz.milik.nmcalc.gui.HighlightedCodePane();

        setLayout(new java.awt.BorderLayout());

        statusLabel.setText("jLabel1");
        add(statusLabel, java.awt.BorderLayout.PAGE_END);

        input.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                inputKeyReleased(evt);
            }
        });
        inputScrollPane.setViewportView(input);

        add(inputScrollPane, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

    private void inputKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inputKeyReleased
        scanner.reset(getInput());
        tokens = new TokenList(scanner.readTokens());
        input.setSyntax(tokens);
        
        this.fireOnInput(getInput());
        
        if ((evt.getKeyCode() == KeyEvent.VK_ENTER) && evt.isControlDown()) {
            fireOnInputCommited(getInput());
        }
    }//GEN-LAST:event_inputKeyReleased

    /*
    this.fireOnInput(getInput());
        
        if ((evt.getKeyCode() == KeyEvent.VK_ENTER) && evt.isControlDown()) {
            fireOnInputCommited(getInput());
        }
    */
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private cz.milik.nmcalc.gui.HighlightedCodePane input;
    private javax.swing.JScrollPane inputScrollPane;
    private javax.swing.JLabel statusLabel;
    // End of variables declaration//GEN-END:variables
}
